on: [push]

permissions:
  id-token: write  # Allow GitHub Actions to request an ID token
  contents: read   # Allow reading repository contents

env:
  REGISTRY_NAME: acrnew1
  CLUSTER_NAME: prod-aks-cluster
  CLUSTER_RESOURCE_GROUP: rg-prod
  NAMESPACE: prod
  IMAGE_NAME: my-app

jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - uses: actions/checkout@v2  # Use v2 instead of master

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.5.0"  # Set your desired Terraform version
        
      # Log into Azure using the service principal credentials
      - name: 'Login to Azure'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_AD_CLIENT_ID }}
          client-secret: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
          tenant-id: ${{ secrets.AZURE_AD_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Docker login to Azure container registry
      - name: Docker login to Azure container registry
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and Push Docker image
        run: |
          docker build . -t ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.REGISTRY_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}

      # Set environment variables for Terraform
      - name: Set environment variables for Terraform
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.AZURE_AD_CLIENT_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.AZURE_AD_CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.AZURE_AD_TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.AZURE_SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: "Terraform Init"
        id: init
        run: terraform init
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: "Terraform Import"
        id: import
        run: terraform import azurerm_resource_group.rg-prod /subscriptions/6f056c81-6e01-4bd7-bd60-cf73b6c1888a/resourceGroups/rg-prod
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Terraform Plan"
        id: plan
        run: terraform plan -no-color -lock=false 
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: "Terraform Apply"
        id: apply
        run: terraform apply -auto-approve -lock=false
        working-directory: terraform
        env:
          ARM_CLIENT_ID: ${{ secrets.AZURE_AD_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.AZURE_AD_CLIENT_SECRET }}
          ARM_TENANT_ID: ${{ secrets.AZURE_AD_TENANT_ID }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
